@model AccountingApp.Models.Entries

@{
    ViewBag.Title = "AccountantIndex";
    Layout = "~/Views/Shared/_Layout_Accountant.cshtml";
    //Layout = null;

}

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    @Styles.Render("~/Scripts/bootstrap-datetimepicker.min.css")

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/css/bootstrap.min.css" integrity="sha384-PDle/QlgIONtM1aqA2Qemk5gPOE7wFq8+Em+G/hmo5Iq0CCmYZLv3fVRDJ4MMwEA" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" />


    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">



    <style>
        .navbar-text {
            padding-right: 20px;
        }

        .container {
            width: 100%;
            margin-top: 2%;
        }

        .inner {
            overflow: hidden;
        }

            .inner img {
                transition: all 1.5s ease;
            }

            .inner:hover img {
                transform: scale(1.5);
            }

        .form_datetime {
            display: block;
            width: 100%;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .deletebutton {
            background-image: url('../../img/trashcan-delete.png');
            background-color: transparent;
            background-size: 100%;
            width: 18px;
            height: 18px;
            border: none;
            cursor: pointer;
            color: white;
            /*padding: 4px 14px;
            font-size: 16px;*/
        }

            .deletebutton:hover {
                background-color: transparent;
            }

            .deletebutton:active {
                position: relative;
                top: 1px;
            }

        .ErrorMessage {
            color: red;
            font-size: 14px;
        }

        table.EntryTable {
            border: 1px solid #1C6EA4;
            background-color: #EEEEEE;
            text-align: right;
        }

            table.EntryTable td, table.EntryTable th {
                border: 0px solid #AAAAAA;
                padding: 5px 10px;
            }

            table.EntryTable tbody td {
                font-size: 16px;
                color: #000000;
                border-left: 2px solid #AAAAAA;
            }

                table.EntryTable tbody td:first-child {
                    border-left: none;
                }

                table.EntryTable tbody td:nth-child(2) {
                    text-align: left;
                }

                table.EntryTable tbody td:nth-child(5) {
                    text-align: left;
                }

            table.EntryTable thead {
                background: #1C6EA4;
                background: -moz-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
                background: -webkit-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
                background: linear-gradient(to bottom, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
                border-bottom: 3px solid #444444;
            }

                table.EntryTable thead th {
                    font-size: 20px;
                    font-weight: bold;
                    color: #FFFFFF;
                    text-align: center;
                    border-left: 2px solid #D0E4F5;
                }

                    table.EntryTable thead th:first-child {
                        border-left: none;
                    }
    </style>
</head>
<body>


    @*<nav class="navbar navbar-expand-lg navbar-dark bg-dark navbar-fixed-top ">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
            <a class="navbar-brand" href="#">Objective Accounting</a>
            <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">About</a>
                </li>

            </ul>
            <ul class="nav navbar-nav navbar-right">*@

    <!-- Button trigger modal -->
    @*<button type="button" class="btn btn-success" data-toggle="modal" data-target="#exampleModal">
            Journalize
        </button>*@
    <!-- Modal -->
    @*<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-lg" style="width:100%" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Journal Entry</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("Journalize", "Accountant", new { id = "rowForm" }))
                {
                    <div class="modal-body">*@

    @*<div class="form-group col-md-4">*@

    @*<table id="InputTable" style="width:100%">
            <colgroup>
                <col style="width: 16%">
                <col style="width: 46%">
                <col style="width: 19%">
                <col style="width: 19%">
            </colgroup>
            <tr>
                <td>Date</td>
                <td>Account</td>
                <td>Debit</td>
                <td>Credit</td>

            </tr>

            <tr>

                <td><input type="text" id="Date" onkeydown="return false;" class="form_datetime" style="text-align:right" value="" placeholder="mm/dd/yyyy"></td>



                <td class="selectpicker active-cyan-4 mb-4" data-live-search="true" multiple data-max-options="2" required>
                    <div>
                        @Html.DropDownList("AccountNumber", (List<SelectListItem>)ViewBag.accountList, new { @class = "form-control ", @name = "AccountNumber[]", required = "required" })
                    </div>
                </td>
                <td><input type="text" id="Debit" class="form-control" autocomplete="off" style="text-align:right" onkeyup="AdjustTextboxes();" onkeypress="return validateFloatKeyPress(this,event);" value="" placeholder="$0.00"></td>

                <td><input type="text" id="Credit" class="form-control" autocomplete="off" style="text-align:right" onkeyup="AdjustTextboxes();" onkeypress="return validateFloatKeyPress(this,event);" value="" placeholder="$0.00"></td>

                <td><button type="button" id="AddEntry" class="btn btn-info" onclick="AppendToList()">Add</button></td>
            </tr>

            <tr>
                <td><span id="DateError" class="ErrorMessage"></span></td>
                <td><span id="AccountError" class="ErrorMessage"></span></td>
                <td><span id="DebitError" class="ErrorMessage"></span></td>
                <td><span id="CreditError" class="ErrorMessage"></span></td>

            </tr>

        </table>
        <br />
        <hr>
        <br />

        <table id="EntryTable" class="EntryTable" style="table-layout: fixed; width: 98%">
            <colgroup>
                <col style="width: 15%">
                <col style="width: 43%">
                <col style="width: 17%">
                <col style="width: 17%">
                <col style="width: 6%">
            </colgroup>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Account</th>
                    <th>Debit</th>
                    <th>Credit</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>*@

    @* Extra row in table to show brown strip *@
    @*<tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>

                </tr>

            </tbody>

        </table>

        <table style="table-layout: fixed; width: 98%; text-align: right">
            <colgroup>
                <col style="width: 58%">
                <col style="width: 17%">
                <col style="width: 17%">
                <col style="width: 8%">
            </colgroup>
            <tr id="totals">
                <td><span id="TotalLabel" class="">Totals:</span></td>
                <td><span id="DebitTotal" class="">$ 0.00</span></td>
                <td><span id="CreditTotal" class="">$ 0.00</span></td>
                <td></td>
            </tr>

        </table>

        <br />


        <div class="col-md-12">*@
    @*<table class="table table-hover small-text" id="tb">
            <tr class="tr-header">
                <th>Account Name</th>
                <th>Debit</th>
                <th>Credit</th>
                <th>
                    <a href="javascript:void(0);" style="font-size:18px;" id="addMore" title="Add More Person"><i class="fas fa-plus"></i>

                </th>
            </tr>
            <tr>


                <td>
                    <a href='javascript:void(0);' class='remove'><i class="fas fa-times"></i></a>
                </td>

            </tr>
        </table>*@


    @*<div class="form-group col-md-10">
                    <label for="Comment" class="control-label">Comment</label>
                    <textarea class="form-control" id="Comment" name="Comment" rows="1" placeholder="Optional"></textarea>

                </div>
                <div class="form-group col-md-12">
                    <input type="file" class="form-control-file" id="fileInput" name="file" multiple>
                </div>


                <div class="form-group col-md-10">

                    <span id="SubmitError" style="font-size: 18px;" class="ErrorMessage"></span>

                </div>

            </div>



        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>*@
    @*<button type="submit" id="btnSubmit" class="btn btn-success">Submit</button>*@
    @*<button type="button" id="btnSubmit" class="btn btn-success">Submit</button>

                            <button type="button" onclick="ResetFunction()" class="btn btn-info">Reset</button>
                            <button type="button" id="btnSave" class="btn btn-warning">Suspend</button>

                        </div>
                    }
                </div>

            </div>

        </div>*@
    @*<li>
            <a class="nav-link active" href="#">General Ledger</a>
        </li>
        <li>
            <a class="nav-link active" href="#">Reports</a>
        </li>
        <li>
            <a class="nav-link active" href="#">Transactions</a>
        </li>
        <li>
            <a class="nav-link active" href="#">Chart Of Accounts</a>
        </li>
        <li>
            <a class="nav-link active" href="#">Dashboard</a>
        </li>
        <br />
        <h3 style="color:white">|</h3>
        <li class="nav-item">
            <a class="nav-link active" href="#">Sign Out</a>
        </li>*@
    @*</ul>
            </div>
        </nav>*@
    <br />
    <br />
    <div style="width:80%; margin:0 auto">

        <hr />
        <h5>General Journal</h5>
        <hr />
        <div>
            <table id="GeneralJournalTable" class="table table-responsive table-striped" style="width:100%">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>EntryID</th>
                        <th>Accounts Affected</th>
                        <th>Debit</th>
                        <th>Credit</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.entries.Count; i++)
                    {
                        <tr>
                            <td>@Model.entries[i].submitDate</td>
                            <td>@Model.entries[i].entryID</td>
                            <td style="white-space: pre-wrap;">@Model.entries[i].FormattedAccountNames()</td>
                            <td align="right" style="white-space: pre-wrap;">@Model.entries[i].FormattedDebits()</td>
                            <td align="right" style="white-space: pre-wrap;">@Model.entries[i].FormattedCredits()</td>
                            <td>@Model.entries[i].status</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



        <hr />
        @*<div class="btn-group" role="group" aria-label="Basic example">
                <button type="button" class="btn btn-success">All</button>
                <button type="button" class="btn btn-success">Approved</button>
                <button type="button" class="btn btn-success">Declined</button>
                <button type="button" class="btn btn-success">Pending</button>

            </div>*@

    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>


    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/js/bootstrap.min.js" integrity="sha384-7aThvCh9TypR7fIc2HV4O/nFMVCBwyIUKL8XCtKE+8xgCgl/PQGuFsvShjr74PBp" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#JournalEntries').DataTable();
        });
    </script>
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>



    <hr />
    @*<div class="btn-group" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-success">All</button>
            <button type="button" class="btn btn-success">Approved</button>
            <button type="button" class="btn btn-success">Declined</button>
            <button type="button" class="btn btn-success">Pending</button>

        </div>*@
    @*</div>*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script>
        $(function () {
            $('#addMore').on('click', function () {
                var data = $("#tb tr:eq(1)").clone(true).appendTo("#tb");
                data.find("input").val('');
            });
            $(document).on('click', '.remove', function () {
                var trIndex = $(this).closest("tr").index();
                $(this).closest("tr").remove();
                //if (trIndex > 1) {
                //    $(this).closest("tr").remove();
                //} else {
                //    alert("Can't remove first row!");
                //}
            });
        });
    </script>

    <script>

        //n is the number to pass in
        function formatMoney(n, c, d, t) {
            var c = isNaN(c = Math.abs(c)) ? 2 : c,
                d = d == undefined ? "." : d,
                t = t == undefined ? "," : t,
                s = n < 0 ? "-" : "",
                i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
                j = (j = i.length) > 3 ? j % 3 : 0;

            return "$ " + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
        };

        function StripMoneyFormatting(NumValue) {
            //remove commas
            var res = NumValue.replace(/,/g, "");

            //remove '$ '
            var res2 = res.replace("$ ", "");

            return res2;
        }

        function AdjustTotals() {

            var table = document.getElementById("EntryTable"), sumDebit = 0, sumCredit = 0;

            for (var i = 2; i < table.rows.length; i++) {
                var Dhtml = table.rows[i].cells[2].innerHTML;
                var Chtml = table.rows[i].cells[3].innerHTML;

                if (Dhtml != "") {
                    var fix = StripMoneyFormatting(Dhtml)
                    sumDebit = sumDebit + parseFloat(fix);
                }

                if (Chtml != "") {
                    var fix2 = StripMoneyFormatting(Chtml)
                    sumCredit = sumCredit + parseFloat(fix2);
                }

            }

            //Write totals
            if (sumDebit == "") {
                sumDebit = 0;
            }

            if (sumCredit == "") {
                sumCredit = 0;
            }

            document.getElementById('DebitTotal').innerHTML = formatMoney(sumDebit);
            document.getElementById('CreditTotal').innerHTML = formatMoney(sumCredit);
        }

    </script>

    <script>

        function ResetFunction() {

            //clear all errors
            document.getElementById('DateError').innerText = "";
            document.getElementById('AccountError').innerText = "";
            document.getElementById('DebitError').innerText = "";  //innerHTML works too
            document.getElementById('CreditError').innerText = "";  //innerHTML works too
            document.getElementById('SubmitError').innerText = "";

            //reset date
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();

            if (dd < 10) {
                dd = '0' + dd;
            }

            today = mm + '/' + dd + '/' + yyyy;

            var d = document.getElementById("Date");
            d.value = today;

            //change input row back to normal
            //Move selection back to 'Please select an account'
            document.getElementById("AccountNumber").selectedIndex = "0";

            //Clear debit and credit textboxes
            var deb2 = document.getElementById("Debit");
            var cre2 = document.getElementById("Credit");

            deb2.disabled = false;
            cre2.disabled = false;
            deb2.value = "";
            cre2.value = "";

            //change total values
            document.getElementById('DebitTotal').innerText = "$ 0.00";
            document.getElementById('CreditTotal').innerText = "$ 0.00";


            //clear table
            var rowsAmount = document.getElementById('EntryTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
            var table = document.getElementById("EntryTable");

            var i;
            for (i = 2; i <= rowsAmount; i++) {

                //Get Account Listed In Table
                var Account = table.rows[i].cells[1].innerHTML;

                var Fix1 = Account.replace("<span style=\"padding-left: 5%\">", "");
                var ActualAccount = Fix1.replace("</span>", "");

                //Add account back to drop down list
                var x = document.getElementById("AccountNumber");
                var option = document.createElement("option");
                option.text = ActualAccount;
                x.add(option, 1);


            }


            //removes all rows
            $("#EntryTable tbody tr").remove();

            //get table body element
            var tableRef = document.getElementById('EntryTable').getElementsByTagName('tbody')[0];

            // Insert a row in the table at the last row
            var newRow = tableRef.insertRow(tableRef.rows.length);

            // Insert a cell in the row at index 0
            newRow.insertCell(0);
            newRow.insertCell(1);
            newRow.insertCell(2);
            newRow.insertCell(3);
            newRow.insertCell(4);

            SortAccountList();

            //Clear Uploaded Files Selection
            $("#fileInput").val(null);

        }

        //Prepare drop down when page loads
        $(document).ready(function () {

            //Sort Account list
            $("#AccountNumber").html($('#AccountNumber option').sort(function (x, y) {
                return $(x).text() < $(y).text() ? -1 : 1;
            }))


            //Add default option at top
            var x = document.getElementById("AccountNumber");
            var option = document.createElement("option");
            option.text = "Please select an account";
            x.add(option, 0);

            //Select first item
            $("#AccountNumber").get(0).selectedIndex = 0;

        });

    </script>

    <script>

        function AdjustTextboxes() {
            var deb = document.getElementById("Debit");
            var debval = deb.value;

            var cre = document.getElementById("Credit");
            var creval = cre.value;

            if (debval == "" && creval == "") {
                //turn both the debit and credit textboxes on to allow the user to pick which one to type in
                cre.disabled = false;
                deb.disabled = false;
            }

            else if (debval != "") {
                cre.disabled = true;
                //Hide error messages
                document.getElementById('DebitError').innerText = "";  //innerHTML works too
                document.getElementById('CreditError').innerText = "";  //innerHTML works too
            }

            else if (creval != "") {
                deb.disabled = true;
                //Hide error messages
                document.getElementById('DebitError').innerText = "";  //innerHTML works too
                document.getElementById('CreditError').innerText = "";  //innerHTML works too
            }
        }

    </script>

    @Scripts.Render("~/Scripts/jquery-1.8.3.min.js")
    @Scripts.Render("~/Scripts/bootstrap.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.js")

    <script type="text/javascript">
        $('.form_datetime').datetimepicker({
            format: "m/d/yyyy",
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            forceParse: 0,
            showMeridian: 1
        });
    </script>

    <script>

        function RemoveLine(button) {
            //Determine the reference of the Row using the Button.
            var row = $(button).closest("TR");
            //alert(row[0].rowIndex);
            //Get the reference of the Table.
            var table = $("#EntryTable")[0];

            //Get Account Listed In Table
            var Account = table.rows[row[0].rowIndex].cells[1].innerHTML;

            var Fix1 = Account.replace("<span style=\"padding-left: 5%\">", "");
            var ActualAccount = Fix1.replace("</span>", "");

            //Add account back to drop down list
            var x = document.getElementById("AccountNumber");
            var option = document.createElement("option");
            option.text = ActualAccount;
            x.add(option, 1);

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);

            AdjustTotals();
            SortAccountList();
        };

    </script>

    <script>
        //Only allow digits and two decimal places in credit and debit fields

        function validateFloatKeyPress(el, evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            var number = el.value.split('.');
            if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            //just one dot
            if (number.length > 1 && charCode == 46) {
                return false;
            }
            //get the carat position
            var caratPos = getSelectionStart(el);
            var dotPos = el.value.indexOf(".");
            if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
                return false;
            }
            return true;
        }

        function getSelectionStart(o) {
            if (o.createTextRange) {
                var r = document.selection.createRange().duplicate()
                r.moveEnd('character', o.value.length)
                if (r.text == '') return o.value.length
                return o.value.lastIndexOf(r.text)
            } else return o.selectionStart
        }

    </script>

    <script>
        window.onload = function () {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();

            if (dd < 10) {
                dd = '0' + dd;
            }

            today = mm + '/' + dd + '/' + yyyy;

            var d = document.getElementById("Date");
            d.value = today;
        };

    </script>

    <script>
        function AppendToList() {


            if ($("#Date").val() == "") {
                $.ajax({
                    url: "/Account/GetErrors",
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        //Index starts from 0 so number is 1 off from database
                        //Populate error message from database
                        document.getElementById('DateError').innerText = data[37];  //innerHTML works too
                    }
                });
                return;
            }

            //Clear Error Message
            document.getElementById('DateError').innerText = "";

            if (document.getElementById('AccountNumber').selectedIndex == 0) {
                $.ajax({
                    url: "/Account/GetErrors",
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        //Index starts from 0 so number is 1 off from database
                        //Populate error message from database
                        document.getElementById('AccountError').innerText = data[38];  //innerHTML works too
                    }
                });
                return;
            }

            //Clear Error Message
            document.getElementById('AccountError').innerText = "";

            if (($("#Debit").val() == "") && ($("#Credit").val() == "")) {

                $.ajax({
                    url: "/Account/GetErrors",
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        //Index starts from 0 so number is 1 off from database
                        //Populate error message from database
                        document.getElementById('DebitError').innerText = data[39];  //innerHTML works too
                        document.getElementById('CreditError').innerText = data[40];  //innerHTML works too
                    }
                });
                return;
            }


            var table = document.getElementById("EntryTable");
            var date = document.getElementById("Date").value;

            //Get text value of drop down
            var AccountSelect = document.getElementById("AccountNumber");
            var acc = AccountSelect.options[AccountSelect.selectedIndex].textContent;


            var deb = document.getElementById("Debit").value;
            var cre = document.getElementById("Credit").value;


            //check for only 0 in credit or debit field
            if (cre != "") {
                //credit is entered

                var CreTest = cre.replace(/0/g, "");
                //var res = NumValue.replace(/0/g, "");

                if (CreTest == "") {
                    //All 0's entered for Credit
                    $.ajax({
                        url: "/Account/GetErrors",
                        method: 'post',
                        dataType: 'json',
                        success: function (data) {
                            //Index starts from 0 so number is 1 off from database
                            //Populate error message from database
                            document.getElementById('CreditError').innerText = data[42];  //innerHTML works too
                        }
                    });

                    return;
                }

            } else {
                //debit is entered
                var DebTest = deb.replace(/0/g, "");

                if (DebTest == "") {
                    //All 0's entered for Debit
                    $.ajax({
                        url: "/Account/GetErrors",
                        method: 'post',
                        dataType: 'json',
                        success: function (data) {
                            //Index starts from 0 so number is 1 off from database
                            //Populate error message from database
                            document.getElementById('DebitError').innerText = data[41];  //innerHTML works too
                        }
                    });

                    return;
                }
            }


            var RowtoInsertAt = -1;
            var row;

            if (deb != "") {
                //debit being entered, need to insert above credits

                var rowsAmount = document.getElementById('EntryTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
                var table = document.getElementById("EntryTable");

                //loop through html table from bottom to top, find the first debit
                for (j = rowsAmount; j >= 1; j--) {

                    if (rowsAmount == 1) {
                        //table is empty
                        RowtoInsertAt = 2;
                        break;
                    }

                    //Get Account Listed In Table
                    var DebitAmount = table.rows[j].cells[2].innerHTML;

                    if (DebitAmount != "") {
                        //debit found
                        RowtoInsertAt = j + 1;
                        break;
                    }
                }

                if (RowtoInsertAt == -1) {
                    //no debit was found
                    RowtoInsertAt = 2;
                }

                row = table.insertRow(RowtoInsertAt);
            } else {
                //credit being inserted so insert at bottom
                row = table.insertRow();
            }

            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            var cell4 = row.insertCell(3);
            var cell5 = row.insertCell(4);

            cell1.innerHTML = date;


            if (cre != "") {
                //credit is entered, add padding to tab over the account name
                cell2.innerHTML = "<span style='padding-left: 5%'>" + acc + "</span>";

                var CreMoney = formatMoney(cre);
                cell4.innerHTML = CreMoney;
            } else {
                //debit is entered, no padding needed
                cell2.innerHTML = acc;

                var DebMoney = formatMoney(deb);
                cell3.innerHTML = DebMoney;
            }


            //Add delete button to last column
            cell5.innerHTML = '<input type="button" class="deletebutton" onclick="RemoveLine(this)"/>';

            AdjustTotals();

            //Delete account from drop down
            var x = document.getElementById("AccountNumber");
            x.remove(x.selectedIndex);

            //Move selection back to 'Please select an account'
            document.getElementById("AccountNumber").selectedIndex = "0";

            //Clear debit and credit textboxes
            var deb2 = document.getElementById("Debit");
            var cre2 = document.getElementById("Credit");

            deb2.disabled = false;
            cre2.disabled = false;
            deb2.value = "";
            cre2.value = "";
        }
    </script>

    <script>
        function getTableData(table) {
            var data = [];
            table.find('tr').each(function (rowIndex, r) {
                var cols = [];
                $(this).find('th,td').each(function (colIndex, c) {
                    cols.push(c.textContent);
                });
                data.push(cols);
            });
            return data;
        }

        function SortAccountList() {

            //Remove the 'Please select an account'
            var x = document.getElementById("AccountNumber");
            x.remove(0);

            //Sort Account list
            $("#AccountNumber").html($('#AccountNumber option').sort(function (x, y) {
                return $(x).text() < $(y).text() ? -1 : 1;
            }))


            //Add back in 'Please select an account' to top
            var x = document.getElementById("AccountNumber");
            var option = document.createElement("option");
            option.text = "Please select an account";
            x.add(option, 0);

            //Select first item
            $("#AccountNumber").get(0).selectedIndex = 0;
        }
    </script>

    @* The script below has been commented out because testing showed it was interfering with posting journals to the database *@
    @*<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/js/bootstrap.min.js" integrity="sha384-7aThvCh9TypR7fIc2HV4O/nFMVCBwyIUKL8XCtKE+8xgCgl/PQGuFsvShjr74PBp" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>


    <script>
        $(document).ready(function () {
            $('#JournalEntries').DataTable();
        });
    </script>

    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>


    <script>

        $("body").on("click", "#btnSave", function () {

            //Get totals
            var debTot = document.getElementById("DebitTotal").innerText;
            var creTot = document.getElementById("CreditTotal").innerText;


            //Check if anything was entered

            if (debTot == "$ 0.00" && creTot == "$ 0.00") {

                $.ajax({
                    url: "/Account/GetErrors",
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        //Index starts from 0 so number is 1 off from database
                        //Populate error message from database
                        document.getElementById("SubmitError").innerText = data[45];  //innerHTML works too
                    }
                });
                return;
            }

            //Loop through the Table rows and build a JSON array.
            var transactions = new Array();
            $("#EntryTable TBODY TR").each(function () {
                var row = $(this);
                var transaction = {};
                transaction.DateSubmitted = row.find("TD").eq(0).html();

                var Comm = document.getElementById("Comment")

                transaction.Comment = Comm.value;

                transaction.Status = "suspended";

                var AccFix = row.find("TD").eq(1).html();
                var AccFix1 = AccFix.replace("<span style=\"padding-left: 5%\">", "");
                var AccFix2 = AccFix1.replace("</span>", "");

                transaction.AccountName = AccFix2;

                var DebitFix = row.find("TD").eq(2).html();
                var DebitFix2 = StripMoneyFormatting(DebitFix);
                transaction.Debit = DebitFix2;


                var CreditFix = row.find("TD").eq(3).html();
                var CreditFix2 = StripMoneyFormatting(CreditFix);
                transaction.Credit = CreditFix2;

                transactions.push(transaction);
            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Accountant/InsertJournal",
                data: JSON.stringify(transactions),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");
                }
            });

            UploadFiles();

            ResetFunction();

        });

    </script>


    <script>

        $("body").on("click", "#btnSubmit", function () {


            //Get totals
            var debTot = document.getElementById("DebitTotal").innerText;
            var creTot = document.getElementById("CreditTotal").innerText;


            //Check if anything was entered

            if (debTot == "$ 0.00" && creTot == "$ 0.00") {

                $.ajax({
                    url: "/Account/GetErrors",
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        //Index starts from 0 so number is 1 off from database
                        //Populate error message from database
                        document.getElementById("SubmitError").innerText = data[44];  //innerHTML works too
                    }
                });
                return;
            }

            //Check if total of debits is the same as credits
            if (debTot != creTot) {
                $.ajax({
                    url: "/Account/GetErrors",
                    method: 'post',
                    dataType: 'json',
                    success: function (data) {
                        //Index starts from 0 so number is 1 off from database
                        //Populate error message from database
                        document.getElementById("SubmitError").innerText = data[43];  //innerHTML works too
                    }
                });
                return;
            }


            //Loop through the Table rows and build a JSON array.
            var transactions = new Array();
            $("#EntryTable TBODY TR").each(function () {
                var row = $(this);
                var transaction = {};
                transaction.DateSubmitted = row.find("TD").eq(0).html();

                var Comm = document.getElementById("Comment")

                transaction.Comment = Comm.value;

                transaction.Status = "pending";

                var AccFix = row.find("TD").eq(1).html();
                var AccFix1 = AccFix.replace("<span style=\"padding-left: 5%\">", "");
                var AccFix2 = AccFix1.replace("</span>", "");

                transaction.AccountName = AccFix2;

                var DebitFix = row.find("TD").eq(2).html();
                var DebitFix2 = StripMoneyFormatting(DebitFix);
                transaction.Debit = DebitFix2;


                var CreditFix = row.find("TD").eq(3).html();
                var CreditFix2 = StripMoneyFormatting(CreditFix);
                transaction.Credit = CreditFix2;

                transactions.push(transaction);
            });

            //Send the JSON array to Controller using AJAX.
            $.ajax({
                type: "POST",
                url: "/Accountant/InsertJournal",
                data: JSON.stringify(transactions),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (r) {
                    alert(r + " record(s) inserted.");
                }
            });

            UploadFiles();

            ResetFunction();

        });

    </script>


    <script>
        function UploadFiles() {
            var files = $("#fileInput").get(0).files;

            if (files.length == 0) {
                //no files attached, do not upload
                return;
            }

            var fileData = new FormData();


            for (var i = 0; i < files.length; i++) {
                fileData.append("fileInput", files[i]);
            }


            $.ajax({
                type: "POST",
                url: "/Accountant/UploadFiles",
                dataType: "json",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result, status, xhr) {
                    alert(result);
                },
                error: function (xhr, status, error) {
                    alert(status);
                }

            });
        };

    </script>


    @*<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/js/bootstrap.min.js" integrity="sha384-7aThvCh9TypR7fIc2HV4O/nFMVCBwyIUKL8XCtKE+8xgCgl/PQGuFsvShjr74PBp" crossorigin="anonymous"></script>*@
</body>
</html>
