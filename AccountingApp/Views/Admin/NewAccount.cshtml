@model AccountingApp.Models.ChartOfAcc

@{
    ViewBag.Title = "New Account";
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    //Layout = null;
}
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/css/bootstrap.min.css" integrity="sha384-PDle/QlgIONtM1aqA2Qemk5gPOE7wFq8+Em+G/hmo5Iq0CCmYZLv3fVRDJ4MMwEA" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" />
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@


    <style>
        /*body {
            padding-top: 70px;
            margin: 40px;
            background-color: gainsboro;
        }

        .nav {
            padding-right: 70px;
        }

        .navbar-header {
            padding-left: 70px;
        }*/
        .navbar-text {
            padding-right: 20px;
        }

        .container {
            width: 100%;
            margin-top: 2%;
        }

        .inner {
            overflow: hidden;
        }

            .inner img {
                transition: all 1.5s ease;
            }

            .inner:hover img {
                transform: scale(1.5);
            }
    </style>
</head>
<body>
    @*<div class="nav">
            <nav class="navbar navbar-inverse navbar-fixed-top navbar-collapse navbar-nav">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <a class="navbar-brand" href="#">Objective Accounting</a>
                    </div>
                    <ul class="nav navbar-nav">
                        <li class="active"><a href="#">Home</a></li>

                        <li><a href="#">User Log</a></li>

                        <li><a href="@Url.Action("ShowUserData","Home")">Users</a></li>

                        <li><a href="#">Chart Of Accounts</a></li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right">
                        <li><span class="navbar-text"><span class="glyphicon glyphicon-user"></span> Welcome, Admin</span></li>
                        <li><a href="#">SignOut</a></li>
                    </ul>
                </div>

            </nav>
        </div>*@


    @*<nav class="navbar navbar-expand-lg navbar-fixed-top navbar-light" style="background-color: silver">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
                <a class="navbar-brand" href="#">
                    <img src="~/img/Accounting Logo.PNG" width="150" height="40" />
                </a>
                <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                    <li class="nav-item active">
                        <a class="nav-link" href="/Admin/AdminIndex">Home <span class="sr-only">(current)</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">About</a>
                    </li>

                </ul>
                <form class="form-inline my-2 my-lg-0">
                        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
                    </form>
                <ul class="nav navbar-nav navbar-right">
                    <li><span id="LoggedName" class="navbar-text"><span class="glyphicon glyphicon-user"></span>Welcome, Admin</span></li>
                    <br />
                    <li class="nav-item">
                        <a class="nav-link" href="/Account/Login">Sign Out</a>
                    </li>
                </ul>
            </div>
        </nav>*@

    <br />

    @*@using (Html.BeginForm())
    {*@

        <form method="post" id="accountform" class="needs-validation" novalidate>
            <div class="container" style="width: 43%">
                @Html.ValidationSummary(true, "The following errors were found:", new { @class = "alert alert-danger" })
            </div>

            <div class="container shadow" style="width: 60%">
                <h2> Create New Account</h2>
                <br />
                @*<hr />*@

                <div class="form-row">
                    <div class="form-group col-md-6">

                        <label for="AccountNumber validationTooltip01" class="control-label">Account Number</label>
                        <input type="text" class="form-control" id="AccountNumber validationTooltip01" name="AccountNumber" required>
                        @*@Html.ValidationMessageFor(m => m.AccountNumber, "", new { @class = "text-danger" })*@
                        <div class="invalid-feedback">
                            Please enter account number.
                        </div>
                    </div>
                    <div class="form-group col-md-6">

                        <label for="AccountName" class="control-label">Account Name</label>
                        <input type="text" class="form-control" id="AccountName" name="AccountName" required pattern="[A-Za-z]{1,20}">
                        @*@Html.ValidationMessageFor(m => m.AccountName, "", new { @class = "text-danger" })*@
                        <div class="invalid-feedback">
                            Please enter account name.
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-group">
                            <label for="AccountType" class="control-label">Account Type</label>
                            <select name="AccountType" class="form-control" id="AccountType" required>
                                <option value="">Select..</option>

                                <option value="Assets">Assets</option>
                                <option value="Liabilities">Liabilities</option>
                                <option value="Equity">Equity</option>
                                <option value="Revenue">Revenue</option>
                                <option value="Expense">Expense</option>

                            </select>
                            @*@Html.ValidationMessageFor(m => m.AccountType, "", new { @class = "text-danger" })*@
                            <div class="invalid-feedback">
                                Please select account type.
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-6">

                        <div class="form-group">
                            <label for="NormalSide">Normal Side</label>
                            <select class="cutom-select form-control" id="NormalSide" name="NormalSide" required>
                                <option value="">Select..</option>

                                <option value="Debit">Debit</option>
                                <option value="Credit">Credit</option>

                            </select>
                            <div class="invalid-feedback">
                                Please select normal side.
                            </div>
                        </div>
                    </div>

                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <div class="form-group">
                            <label for="OriginalBalance">Original Balance</label>
                            <input type="text" class="form-control text-right right-justified" id="OriginalBalance" placeholder="0.00" name="OriginalBalance" required>
                            @*@Html.ValidationMessageFor(m => m.OriginalBalance, "", new { @class = "text-danger" })*@
                            <div class="invalid-feedback">
                                This field is required (No more than two decimal places)
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="form-group">
                            <label for="CurrentBalance">Current Balance</label>
                            <input type="text" class="form-control text-right" id="CurrentBalance" readonly="readonly" value="0.00" name="CurrentBalance" required>
                            @*@Html.ValidationMessageFor(m => m.CurrentBalance, "", new { @class = "text-danger" })*@
                            <div class="invalid-feedback">
                                This field is required (No more than two decimal places)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="AccountDescription">Account Description</label>
                    <textarea class="form-control" id="AccountDescription" rows="5" name="AccountDescription" placeholder="(optional)"></textarea>
                </div>
                @*<div class="form-group">
                    <label for="CreatedBy">Created By</label>
                    <input type="text" class="form-control" id="CreatedBy" placeholder="Admin" name="CreatedBy" required>*@
                    @*@Html.ValidationMessageFor(m => m.CreatedBy, "", new { @class = "text-danger" })*@
                    @*<div class="invalid-feedback">
                        This field is required
                    </div>
                </div>*@

                @*<div class="form-group">
                    <label for="Active" class="control-label">Active</label>
                    <input data-val="true" id="Active" name="Active" type="checkbox" value="true" required />
                    <input name="Active" type="hidden" value="false" />

                    @Html.ValidationMessageFor(m => m.Active, "", new { @class = "text-danger" })*@
                            @*</div>*@
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="Active" name="Active" required >
                        <label class="form-check-label" for="Active"style="font-size:large; padding-left:0">
                            Active
                        </label>
                        
                    </div>
                </div>
                <hr />

                <button type="submit" class="btn btn-success" href="@Url.Action("ChartOfAccounts")" id="btnsubmit">Save</button>
                <a href="@Url.Action("ChartOfAccounts")" class="btn btn-warning">
                    <span class="glyphicon glyphicon-remove"></span> Cancel
                </a>
                <hr />
            </div>
            <br />
            <br />
        </form>
    @*}*@




    
    @*<hr />
        <p> &copy; @DateTime.Now.Year - Objective Accounting</p>*@
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.0/js/bootstrap.min.js" integrity="sha384-7aThvCh9TypR7fIc2HV4O/nFMVCBwyIUKL8XCtKE+8xgCgl/PQGuFsvShjr74PBp" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script type="text/javascript">

    @*window.onload = function () {
        var username = '@Session["FirstNameofUser"]';
        document.getElementById("LoggedName").innerHTML = "Welcome, " + username;
    };*@

    </script>

    <script>
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

    </script>

    <script>

        // Restricts input for the given textbox to the given inputFilter.
        function setInputFilter(textbox, inputFilter) {
            ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
                textbox.addEventListener(event, function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                });
            });
        }

        setInputFilter(document.getElementById("AccountNumber validationTooltip01"), function (value) {
            return /^\d*$/.test(value);
        });

        setInputFilter(document.getElementById("OriginalBalance"), function (value) {
            return /^-?\d*[.,]?\d{0,2}$/.test(value);
        });

    </script>

    <script>

        function validateFloatKeyPress(el, evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            var number = el.value.split('.');
            if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            //just one dot
            if (number.length > 1 && charCode == 46) {
                return false;
            }
            //get the carat position
            var caratPos = getSelectionStart(el);
            var dotPos = el.value.indexOf(".");
            if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
                return false;
            }
            return true;
        }

        function getSelectionStart(o) {
            if (o.createTextRange) {
                var r = document.selection.createRange().duplicate()
                r.moveEnd('character', o.value.length)
                if (r.text == '') return o.value.length
                return o.value.lastIndexOf(r.text)
            } else return o.selectionStart
        }

    </script>

</body>
</html>
