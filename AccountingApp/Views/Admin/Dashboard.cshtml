@{
    ViewBag.Title = "Dashboard";
    //Layout = "~/Views/Shared/_Layout_Admin.cshtml";
    Layout = null;
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    @*<meta name="viewport" content="width=device-width, initial-scale=1.0">*@
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">


    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>

    <script src="https://code.highcharts.com/highcharts-more.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    @*<script src="https://code.highcharts.com/modules/export-data.js"></script>*@
    <script src="https://code.highcharts.com/modules/solid-gauge.js"></script>


    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>

    @*<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">*@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" />
    <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/solid.js" integrity="sha384-tzzSw1/Vo+0N5UhStP3bvwWPq+uvzCMfrN1fEFe+xBmv1C/AtVX5K0uZtmcHitFZ" crossorigin="anonymous"></script>
    <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/fontawesome.js" integrity="sha384-6OIrr52G08NpOFSZdxxz1xdNSndlD4vdcf/q2myIUVO0VsqaGHJsB0RaBE01VTOY" crossorigin="anonymous"></script>
    <style>
        .green-band {
            fill: #55BF3B;
            fill-opacity: 1;
        }

        .green {
            fill: #55BF3B;
            fill-opacity: 1;
        }

        .yellow-band {
            fill: #DDDF0D;
            fill-opacity: 1;
        }

        .red-band {
            fill: #DF5353;
            fill-opacity: 1;
        }

        .red {
            fill: #DF5353;
            fill-opacity: 1;
        }

        #container {
            min-width: 310px;
            max-width: 800px;
            height: 400px;
            margin: 0 auto
        }

        a,
        a:hover,
        a:focus {
            color: inherit;
            text-decoration: none;
            transition: all 0.3s;
        }

        .navbar {
            padding: 15px 10px;
            background: #fff;
            border: none;
            border-radius: 0;
            margin-bottom: 40px;
            box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
        }

        .navbar-btn {
            box-shadow: none;
            outline: none !important;
            border: none;
        }

        .line {
            width: 100%;
            height: 1px;
            border-bottom: 1px dashed #ddd;
            margin: 40px 0;
        }

        i,
        span {
            display: inline-block;
        }


        #content {
            width: 100%;
            padding: 20px;
            min-height: 100vh;
            transition: all 0.3s;
        }


        .wrapper {
            display: flex;
            width: 100%;
            align-items: stretch;
        }

        .wrapper {
            display: flex;
            align-items: stretch;
        }

        #sidebar {
            min-width: 300px;
            max-width: 650px;
            min-height: 100vh;
        }
        /*#sidebar.active {
                margin-left: -150px;
            }*/
        a[data-toggle="collapse"] {
            position: relative;
        }

        .dropdown-toggle::after {
            display: block;
            position: absolute;
            top: 50%;
            right: 20px;
            transform: translateY(-50%);
        }

        body {
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
            background: #f4f4f4;
            font-size: 1.2em;
        }

        p {
            font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
            font-size: 1.1em;
            font-weight: 300;
            line-height: 1.7em;
            color: #999;
        }

        a, a:hover, a:focus {
            color: inherit;
            text-decoration: none;
            transition: all 0.3s;
        }

        #sidebar {
            background: #3e547f;
            color: lightgray;
            transition: all 0.3s;
        }

            #sidebar .sidebar-header {
                padding: 20px;
                background: #3e547f;
                border-bottom: 1px solid #47748b;
            }

            #sidebar ul.components {
                padding: 20px 0;
                border-bottom: 1px solid #47748b;
            }

            #sidebar ul p {
                color: #d5d8e0;
                padding: 20px;
            }

            #sidebar ul li a {
                padding: 20px;
                font-size: 1.2em;
                display: block;
            }

                #sidebar ul li a:hover {
                    color: #3e547f;
                    background: #d5d8e0;
                }

            #sidebar ul li.active > a, a[aria-expanded="true"] {
                color: #fff;
                background: #3e547f;
            }

        ul ul a {
            font-size: 0.9em !important;
            padding-left: 30px !important;
            background: #6579a0;
        }

        @@media (max-width: 768px) {
            #sidebar {
                margin-left: -300px;
            }

                #sidebar.active {
                    margin-left: 0;
                }
        }
    </style>
</head>
<body>
    <div class="wrapper">
        <!-- Sidebar  -->
        <nav id="sidebar" class="fixed-left">

            <div class="sidebar-header">
                <h5>Menu</h5>
            </div>

            <ul class="list-unstyled components">
                <li class="active">
                    <a href="/Admin/Dashboard">
                        <i class="fas fa-home" style="margin-right:10px;"></i>
                        Dashboard
                    </a>

                </li>
                <li>

                    <a href="#accountSubmenu" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle">
                        <i class="fas fa-list" style="margin-right:10px;"></i>
                        Chart Of Accounts
                    </a>
                    <ul class="collapse list-unstyled" id="accountSubmenu">
                        <li>
                            <a href="/Admin/ChartOfAccounts">Chart of Accounts</a>
                        </li>
                        <li>
                            <a href="/Admin/NewAccount">Create New Account</a>
                        </li>
                        <li>
                            <a href="/Admin/AccountRequests">View Requests</a>
                        </li>

                    </ul>
                    <a href="#userSubmenu" data-toggle="collapse" aria-expanded="false" class="dropdown-toggle">
                        <i class="fas fa-users" style="margin-right:10px;"></i>
                        Users
                    </a>
                    <ul class="collapse list-unstyled" id="userSubmenu">
                        <li>
                            <a href="/Admin/AllUsers">User List</a>
                        </li>
                        <li>
                            <a href="/Admin/UserStatistics">User Statistics</a>
                        </li>
                        <li>
                            <a href="/Admin/NewUser">Create New User</a>
                        </li>

                    </ul>
                    <a href="/Admin/EventLog">
                        <i class="fas fa-briefcase" style="margin-right:10px;"></i>
                        Event Log
                    </a>

                </li>
            </ul>

        </nav>

        <div id="content">

            <nav class="navbar navbar-expand-lg sticky-top navbar-light justify-content-between">
                <div class="container-fluid">

                    <button type="button" id="sidebarCollapse" class="btn btn-info" style="background-color:#3e547f">
                        <i class="fas fa-bars"></i>

                    </button>
                    <a class="navbar-brand" href="#">
                        <img src="~/img/Accounting Logo.PNG" width="150" height="40" style="margin-right: 15px; margin-left: 10px;" />

                    </a>
                    <button class="btn btn-dark d-inline-block d-lg-none ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <i class="fas fa-align-justify"></i>
                    </button>

                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="nav navbar-nav ml-auto" style="float:right">
                            <li class="nav-item active" style="margin-top:10px">
                                <a>
                                    <i class="fas fa-user-circle" style="color:#3e547f;font-size:24px; "></i>


                                    <i id="LoggedName" class="nav-item" style="font-size: large;  font-style: normal;">Welcome, Admin</i>
                                </a>

                            </li>

                            <li class="nav-item active">
                                <button class=" btn btn-outline-success" onclick="LogOutUser()" style="font-size:large;margin-left:30px">
                                    Log Out


                                </button>
                            </li>

                        </ul>
                    </div>
                </div>
            </nav>
            <div class=" body-content" style="width:100%; margin:0 auto; height:auto">
                <h2 style="display:inline">Dashboard</h2>
            </div>
            <hr class="my-4" />
            <br />
            <div class="row ">
                <div class="column shadow" style="width:22%; margin-left:20px; background-color:white">
                    <div id="currentratio" style="min-width: 310px; max-width: 400px; height: 300px; margin: 0 auto"></div>
                </div>
                <div class="column shadow" style="width:22%; margin-left:20px; background-color:white">
                    <div id="quickratio" style="min-width: 310px; max-width: 400px; height: 300px; margin: 0 auto"></div>

                </div>
                <div class="column shadow" style="width:22%; margin-left:20px; background-color:white">
                    <div id="debtasset" style="min-width: 310px; max-width: 400px; height: 300px; margin: 0 auto"></div>
                </div>
                <div class="column shadow" style="width:22%; margin-left:20px; background-color:white">
                    <div id="debtequity" style="min-width: 310px; max-width: 400px; height: 300px; margin: 0 auto"></div>

                </div>

            </div>
            <br />
            <div class="row ">

                <div class="column " style="width:20%; margin-left:20px;">
                    <div class="shadow" id="chart" style="width:100%"></div>
                </div>
                <div class="column " style="width:20%; margin-left:20px;">
                    <div class="shadow" id="incomeandexpense" style="width:100%"></div>
                </div>
                <div class="column " style="width:49%; margin-left:20px;">
                    <div class="shadow" id="capital" style="width:100%"></div>
                </div>

            </div>
            <br />
            <div class="row ">

                <div class="column shadow" style="width:91%; margin-left:20px; ">
                    <div class="shadow" id="expenses" style=" height: 600px; width: 100%; margin: 0 auto"></div>
                </div>

            </div>
            <br />

            @*<div class="row ">
                <div class="column shadow" style="width:45%; margin-left:20px; background-color:white">
                    <canvas id="brandChart" width="700" height="350"></canvas>

                </div>
                <div class="column shadow" style="width:45%; margin-left:20px; ">
                    <div class="shadow" id="graph" style="float:left;width:100%"></div>

                </div>

            </div>*@
            @*<br />
            <div class="row ">


                <div id="container"></div>
            </div>
            <hr />*@


            <br />
            <br />


            <div class="container body-content">

                <hr />
                <footer align="center">
                    <p>
                        &copy; @DateTime.Now.Year - Objective Accounting - 
                        Jared Breedlove, Amnah Ilyas, Quillan May, Colt McKissick, Broderick Thayer, and Zachary Thayer
                    </p>
                </footer>
            </div>

        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.min.js"></script>

    <script type="text/javascript">

    window.onload = function () {
        var username = '@Session["FirstNameofUser"]';
        document.getElementById("LoggedName").innerHTML = "Welcome, " + username;
    };

    </script>
    <script>
        $(document).ready(function () {

            $('#sidebarCollapse').on('click', function () {
                $('#sidebar').toggleClass('active');
            });

        });
    </script>
    <script>

        var Query3;

        $.ajax(
            {
                url: '/Manager/RetrieveAllTotalTypes/',
                type: "GET",
                async: false,
                dataType: "json",
                contentType: "application/json;",
                success: function (result) {
                    //alert(result);
                    Query3 = result;

                },
                error: function (error) {
                    //alert(JSON.stringify(error));
                }
            });

        var result2 = Query3.replace(/"/g, "");


        var nums = result2.split(";");


        var TotalAssets = Number(nums[0]);
        var TotalLiab = Number(nums[1]);
        var TotalRev = Number(nums[2]);
        var TotalExp = Number(nums[3]);

        var WorkingCapital = TotalAssets - TotalLiab;

        //working capital
        var chart = Highcharts.chart('capital', {
            chart: {
                events: {
                    load: function (event) {
                        var total = 0; // get total of data
                        for (var i = 0, len = this.series[0].yData.length; i < len; i++) {
                            total += this.series[0].yData[i];
                        }
                        var text = this.renderer.text(
                            'Working Capital: $' + total,
                            this.plotLeft,
                            this.plotTop +30,

                        ).attr({
                            zIndex: 5
                        }).add() // write it to the upper left hand corner
                    }
                },
                style: {

                    fontSize: '38px'
                }
            },
            title: {
                text: ''
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ['Working Capital']
            },
            plotOptions: {
                series: {
                    pointWidth: 45
                }
            },

            series: [{
                type: 'bar',
                colorByPoint: true,
                data: [
                    { y: WorkingCapital, color: 'green' }
                   ],
                showInLegend: false,

            }]

        });


        //currentliabilities and assets
        var chart = Highcharts.chart('chart', {
            title: {
                text: 'Current Assets And Liabilities'
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ['Current Assets', 'Current Liabilities']
            },
            plotOptions: {
                series: {
                    pointWidth: 45
                }
            },

            series: [{
                type: 'column',
                colorByPoint: true,
                data: [
                    { y: TotalAssets, color: 'green' },
                    { y: TotalLiab, color: 'orange' }],
                showInLegend: false
            }]

        });



        //incomeandexpense
        var chart = Highcharts.chart('incomeandexpense', {
            title: {
                text: 'Revenue And Expense'
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            xAxis: {
                categories: ['Revenue', 'Expense']
            },
            plotOptions: {
                series: {
                    pointWidth: 45
                }
            },

            series: [{
                type: 'column',
                colorByPoint: true,
                data: [
                    { y: TotalRev, color: 'green' },
                    { y: TotalExp, color: 'red' }],
                showInLegend: false
            }]

        });


        var Query4;

        $.ajax(
            {
                url: '/Manager/RetrieveExpenseDataforChart/',
                type: "GET",
                async: false,
                dataType: "json",
                contentType: "application/json;",
                success: function (result) {
                    //alert(result);
                    Query4 = result;

                },
                error: function (error) {
                    //alert(JSON.stringify(error));
                }
            });

        var ExpenseResult = Query4.replace(/"/g, "");

        var AllExpenses = ExpenseResult.split(";");

        var Cols = [];
        var Series = [];

        for (var i = 0; i < AllExpenses.length; i++) {

            var ExpenseRecord = AllExpenses[i].split("|^|");
            var ExpenseName = ExpenseRecord[0];
            Cols.push(ExpenseName);

            var ExpenseNumber = Number(ExpenseRecord[1]);

            Series.push({ y: ExpenseNumber, color: "#3367A0" });

        }


        //expenses
        var chart = Highcharts.chart('expenses', {
            chart: {
                events: {
                    load: function (event) {
                        var total = 0; // get total of data
                        for (var i = 0, len = this.series[0].yData.length; i < len; i++) {
                            total += this.series[0].yData[i];
                        }
                        var text = this.renderer.text(
                            'Expenses: $' + total,
                            this.plotLeft,
                            this.plotTop +40,

                        ).attr({
                            zIndex: 5
                        }).add() // write it to the upper left hand corner
                    }
                },
                style: {

                    fontSize: '38px'
                }
            },
            title: {
                text:''
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            plotOptions: {
                series: {
                    pointWidth: 65
                }
            },

            xAxis: {
                categories: Cols
                //categories: ['Rent Expense', 'Salaries Expense', 'Supplies Expense', 'Utilities Expense', 'Telephone Expene', 'Advertising Expense', 'Insurance Expense', 'Depriciation Expense']
            },

            series: [{
                type: 'column',
                colorByPoint: true,
                data: Series,
                //data: [{ y: 60, color: '#3367A0' }, { y: 71, color: '#3367A0' }, { y: 106, color: '#3367A0' }, { y: 129, color: '#3367A0' }, { y: 144, color: '#3367A0' }, { y: 176, color: '#3367A0' }, { y: 135, color: '#3367A0' }, { y: 148, color: '#2B5F98' }],
                showInLegend: false,
            }]

        });


        var Query;

        $.ajax(
            {
                url: '/Manager/RetrieveCurrentRatio/',
                type: "GET",
                async: false,
                dataType: "json",
                contentType: "application/json;",
                success: function (result) {
                    //alert(result);
                    Query = result;

                },
                error: function (error) {
                    //alert(JSON.stringify(error));
                }
            });

        var CurValue = Number(Query);


        var Query2;

        $.ajax(
            {
                url: '/Manager/RetrieveBothRatios/',
                type: "GET",
                async: false,
                dataType: "json",
                contentType: "application/json;",
                success: function (result) {
                    //alert(result);
                    Query2 = result;

                },
                error: function (error) {
                    //alert(JSON.stringify(error));
                }
            });

        var result = Query2.replace(/"/g, "");
        var ratios = result.split(";");


        var DebttoEq = Number(ratios[0]);
        var DebttoAss = Number(ratios[1]);


        //current ratio
        Highcharts.chart('currentratio', {

            chart: {
                type: 'gauge',
                plotBackgroundColor: null,
                plotBackgroundImage: null,
                plotBorderWidth: 0,
                plotShadow: false,
                events: {
                    render: function () {
                        var value = this.series[0].yData[0],
                            color;

                        if (value < 1) {
                            color = '#DF5353';
                        } else if (value < 1) {
                            color = '#DDDF0D';
                        } else {
                            color = '#55BF3B';
                        }

                        this.title.css({
                            color: color
                        });
                    }
                }
            },

            title: {
                text: 'Current Ratio'
            },

            pane: {
                startAngle: -125,
                endAngle: 125,
                background: [{
                    borderWidth: 0,
                    backgroundColor: 'transparent'
                }]
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            // the value axis
            yAxis: {

                min: 0,
                max: 18,

                minorTickInterval: 'auto',
                minorTickWidth: 0,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',
                gridLineColor: 'transparent',


                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 0,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: ''
                },
                plotBands: [{
                    from: 0,
                    to: 1,
                    color: '#DF5353',// red
                    innerRadius: '90%',
                    outerRadius: '105%',
                    className: 'red-band'
                }, {
                    from: 1,
                    to: 18,
                        color: '#55BF3B', // green
                        innerRadius: '90%',
                        outerRadius: '105%',
                        className: 'green-band'
                }]
            },
            xAxis: {
                visible: false
            },
            plotOptions: {
                gauge: {
                    dataLabels: {
                        borderColor: 'transparent'
                    },
                    dial: {
                        radius: '75%',
                        backgroundColor: '#666666',
                        borderWidth: 0,
                        baseWidth: 7,
                        topWidth: 1,
                        baseLength: '90%', // of radius
                        rearLength: '0%'
                    },
                    pivot: {
                        backgroundColor: '#666666',
                        radius: 3
                    }
                }
            },

            series: [{
                useHTML: true,
                animation: false,

                name: 'Current Ratio',
                data: [CurValue],
                tooltip: {

                },
                dataLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        fontSize: '38px'
                    }
                }
            }]

        });




        //quick ratio
        Highcharts.chart('quickratio', {

            chart: {
                type: 'gauge',
                plotBackgroundColor: null,
                plotBackgroundImage: null,
                plotBorderWidth: 0,
                plotShadow: false,
                events: {
                    render: function () {
                        var value = this.series[0].yData[0],
                            color;

                        if (value < 1) {
                            color = '#DF5353';
                        } else if (value < 1) {
                            color = '#DDDF0D';
                        } else {
                            color = '#55BF3B';
                        }

                        this.title.css({
                            color: color
                        });
                    }
                }
            },

            title: {
                text: 'Quick Ratio'
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            pane: {
                startAngle: -125,
                endAngle: 125,
                background: [{
                    borderWidth: 0,
                    backgroundColor: 'transparent'
                }]
            },

            // the value axis
            yAxis: {

                min: 0,
                max: 18,

                minorTickInterval: 'auto',
                minorTickWidth: 0,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',
                gridLineColor: 'transparent',


                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 0,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: ''
                },
                plotBands: [{
                    from: 0,
                    to: 1,
                    color: '#DF5353',
                    innerRadius: '90%',
                    outerRadius: '105%',
                    className: 'red-band'

                }, {

                    from: 1,
                    to: 18,
                        color: '#55BF3B',
                    innerRadius: '90%',
                        outerRadius: '105%',
                        className: 'green-band'

                }]
            },
            xAxis: {
                visible: false
            },
            plotOptions: {
                gauge: {
                    dataLabels: {
                        borderColor: 'transparent'
                    },
                    dial: {
                        radius: '75%',
                        backgroundColor: '#666666',
                        borderWidth: 0,
                        baseWidth: 7,
                        topWidth: 1,
                        baseLength: '90%', // of radius
                        rearLength: '0%'
                    },
                    pivot: {
                        backgroundColor: '#666666',
                        radius: 3
                    }
                }
            },

            series: [{
                animation: false,

                name: 'Quick Ratio',
                data: [CurValue],
                tooltip: {

                },
                dataLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        fontSize: '38px'
                    }
                }
            }]

        });


        //debt asset ratio
        Highcharts.chart('debtasset', {

            chart: {
                type: 'gauge',
                plotBackgroundColor: null,
                plotBackgroundImage: null,
                plotBorderWidth: 0,
                plotShadow: false,
                events: {
                    render: function () {
                        var value = this.series[0].yData[0],
                            color;

                        if (value < 1) {
                            color = '#55BF3B';
                        } else if (value < 1) {
                            color = '#DDDF0D';
                        } else {
                            color = '#DF5353' ;
                        }

                        this.title.css({
                            color: color
                        });
                    }
                }
            },

            title: {
                text: 'Debt Asset Ratio'
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            pane: {
                startAngle: -125,
                endAngle: 125,
                background: [{
                    borderWidth: 0,
                    backgroundColor: 'transparent'
                }]
            },

            // the value axis
            yAxis: {

                min: 0,
                max: 2,

                minorTickInterval: 'auto',
                minorTickWidth: 0,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',
                gridLineColor: 'transparent',


                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 0,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: ''
                },
                plotBands: [{
                    from: 0,
                    to: 1,
                    color: '#55BF3B',// green
                    innerRadius: '90%',
                    outerRadius: '105%',
                    className: 'green'
                }, {
                    from: 1,
                    to: 2,
                    color: '#DF5353', // red
                    innerRadius: '90%',
                        outerRadius: '105%',
                        className: 'red'

                }]
            },
            xAxis: {
                visible: false
            },
            plotOptions: {
                gauge: {
                    dataLabels: {
                        borderColor: 'transparent'
                    },
                    dial: {
                        radius: '75%',
                        backgroundColor: '#666666',
                        borderWidth: 0,
                        baseWidth: 7,
                        topWidth: 1,
                        baseLength: '90%', // of radius
                        rearLength: '0%'
                    },
                    pivot: {
                        backgroundColor: '#666666',
                        radius: 3
                    }
                }
            },

            series: [{
                animation: false,

                name: 'Debt Asset Ratio',
                data: [DebttoEq],
                tooltip: {

                },
                dataLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        fontSize: '38px'
                    }
                }
            }]

        });



        //debt equity ratio
        Highcharts.chart('debtequity', {

            chart: {
                type: 'gauge',
                plotBackgroundColor: null,
                plotBackgroundImage: null,
                plotBorderWidth: 0,
                plotShadow: false,
                events: {
                    render: function () {
                        var value = this.series[0].yData[0],
                            color;

                        if (value < 1) {
                            color = '#55BF3B';
                        } else if (value < 1) {
                            color = '#DDDF0D';
                        } else {
                            color = '#DF5353';
                        }

                        this.title.css({
                            color: color
                        });
                    }
                }
            },

            title: {
                text: 'Debt Equity Ratio'
            },
            exporting: {
                enabled: false
            },
            credits: {
                enabled: false
            },
            pane: {
                startAngle: -125,
                endAngle: 125,
                background: [{
                    borderWidth: 0,
                    backgroundColor: 'transparent'
                }]
            },

            // the value axis
            yAxis: {

                min: 0,
                max: 2,

                minorTickInterval: 'auto',
                minorTickWidth: 0,
                minorTickLength: 10,
                minorTickPosition: 'inside',
                minorTickColor: '#666',
                gridLineColor: 'transparent',


                tickPixelInterval: 30,
                tickWidth: 2,
                tickPosition: 'inside',
                tickLength: 0,
                tickColor: '#666',
                labels: {
                    step: 2,
                    rotation: 'auto'
                },
                title: {
                    text: ''
                },
                plotBands: [{
                    from: 0,
                    to: 1,
                    color: '#55BF3B',// green
                    innerRadius: '90%',
                    outerRadius: '105%',
                    className: 'green'

                }, {
                    from: 1,
                    to: 2,
                    color: '#DF5353', // red
                    innerRadius: '90%',
                        outerRadius: '105%',
                        className: 'red'

                }]
            },
            xAxis: {
                visible: false
            },
            plotOptions: {
                gauge: {
                    dataLabels: {
                        borderColor: 'transparent'
                    },
                    dial: {
                        radius: '75%',
                        backgroundColor: '#666666',
                        borderWidth: 0,
                        baseWidth: 7,
                        topWidth: 1,
                        baseLength: '90%', // of radius
                        rearLength: '0%'
                    },
                    pivot: {
                        backgroundColor: '#666666',
                        radius: 3
                    }
                }
            },

            series: [{
                animation: false,

                name: 'Debt Equity Ratio',
                data: [DebttoAss],
                tooltip: {

                },
                dataLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        fontSize: '38px'
                    }
                }
            }]

        });

    </script>
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")*@
    @*@RenderSection("scripts", required: false)*@
</body>
</html>

<script>

        function LogOutUser() {

            var username = '@Session["Username"]';

            $.ajax({
                url: "/Account/LogOutUser",
                contentType: "application/json; charset=utf-8",
                data: "{'username':'" + username + "'}",
                type: 'POST',
                cache: false,
                success: function (result) {
                    //alert(result);
                }
            });

            window.location.href = '../../Account/Login';
        }

</script>

